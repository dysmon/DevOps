[2024-11-17 14:32:57,973] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-11-17 14:32:57,990] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2024-11-17 14:32:57,998] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2024-11-17 14:32:58,003] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-11-17 14:32:58,005] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-11-17 14:32:58,007] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2024-11-17 14:32:58,032] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 374) (kafka.controller.KafkaController)
[2024-11-17 14:32:58,075] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2024-11-17 14:32:58,127] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-11-17 14:32:58,138] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-11-17 14:32:58,138] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2024-11-17 14:32:58,138] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2024-11-17 14:32:58,138] INFO [Controller id=1] Current list of topics in the cluster: Set(__consumer_offsets, my-topic) (kafka.controller.KafkaController)
[2024-11-17 14:32:58,138] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-11-17 14:32:58,142] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-11-17 14:32:58,142] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets,my-topic (kafka.controller.KafkaController)
[2024-11-17 14:32:58,142] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-11-17 14:32:58,142] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(__consumer_offsets, my-topic) (kafka.controller.TopicDeletionManager)
[2024-11-17 14:32:58,142] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2024-11-17 14:32:58,171] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-11-17 14:32:58,175] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-11-17 14:32:58,198] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:32:58,203] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-11-17 14:32:58,363] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-11-17 14:32:58,364] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-11-17 14:32:58,365] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-11-17 14:32:58,373] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-11-17 14:32:58,422] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, my-topic-2 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, my-topic-1 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, my-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-11-17 14:32:58,422] INFO [Controller id=1] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2024-11-17 14:32:58,423] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-11-17 14:32:58,423] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-11-17 14:32:58,423] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-11-17 14:32:58,423] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-11-17 14:32:58,423] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-11-17 14:32:58,427] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-11-17 14:33:03,430] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-11-17 14:33:03,430] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-11-17 14:33:03,435] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(__consumer_offsets-22 -> Vector(3, 2, 1), my-topic-2 -> Vector(3, 2), __consumer_offsets-4 -> Vector(3, 2, 1), __consumer_offsets-7 -> Vector(3, 1, 2), __consumer_offsets-46 -> Vector(3, 2, 1), __consumer_offsets-25 -> Vector(3, 1, 2), __consumer_offsets-49 -> Vector(3, 1, 2), __consumer_offsets-16 -> Vector(3, 2, 1), __consumer_offsets-28 -> Vector(3, 2, 1), __consumer_offsets-31 -> Vector(3, 1, 2), __consumer_offsets-37 -> Vector(3, 1, 2), __consumer_offsets-19 -> Vector(3, 1, 2), __consumer_offsets-13 -> Vector(3, 1, 2), __consumer_offsets-43 -> Vector(3, 1, 2), __consumer_offsets-1 -> Vector(3, 1, 2), __consumer_offsets-34 -> Vector(3, 2, 1), __consumer_offsets-10 -> Vector(3, 2, 1), __consumer_offsets-40 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2024-11-17 14:33:03,436] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2024-11-17 14:33:03,450] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-11-17 14:33:03,451] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(__consumer_offsets-30 -> Vector(2, 3, 1), __consumer_offsets-21 -> Vector(2, 1, 3), __consumer_offsets-27 -> Vector(2, 1, 3), __consumer_offsets-9 -> Vector(2, 1, 3), my-topic-1 -> Vector(2, 1), __consumer_offsets-33 -> Vector(2, 1, 3), __consumer_offsets-36 -> Vector(2, 3, 1), __consumer_offsets-42 -> Vector(2, 3, 1), __consumer_offsets-3 -> Vector(2, 1, 3), __consumer_offsets-18 -> Vector(2, 3, 1), __consumer_offsets-15 -> Vector(2, 1, 3), __consumer_offsets-24 -> Vector(2, 3, 1), __consumer_offsets-48 -> Vector(2, 3, 1), __consumer_offsets-6 -> Vector(2, 3, 1), __consumer_offsets-0 -> Vector(2, 3, 1), __consumer_offsets-39 -> Vector(2, 1, 3), __consumer_offsets-12 -> Vector(2, 3, 1), __consumer_offsets-45 -> Vector(2, 1, 3)) (kafka.controller.KafkaController)
[2024-11-17 14:33:03,451] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-11-17 14:33:03,451] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-11-17 14:33:03,451] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(__consumer_offsets-8 -> Vector(1, 2, 3), __consumer_offsets-35 -> Vector(1, 3, 2), __consumer_offsets-41 -> Vector(1, 3, 2), __consumer_offsets-23 -> Vector(1, 3, 2), __consumer_offsets-47 -> Vector(1, 3, 2), my-topic-0 -> Vector(1, 3), __consumer_offsets-38 -> Vector(1, 2, 3), __consumer_offsets-17 -> Vector(1, 3, 2), __consumer_offsets-11 -> Vector(1, 3, 2), __consumer_offsets-2 -> Vector(1, 2, 3), __consumer_offsets-14 -> Vector(1, 2, 3), __consumer_offsets-20 -> Vector(1, 2, 3), __consumer_offsets-44 -> Vector(1, 2, 3), __consumer_offsets-5 -> Vector(1, 3, 2), __consumer_offsets-26 -> Vector(1, 2, 3), __consumer_offsets-29 -> Vector(1, 3, 2), __consumer_offsets-32 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2024-11-17 14:33:03,451] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-11-17 14:33:03,452] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-11-17 14:34:07,133] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2024-11-17 14:34:07,134] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2024-11-17 14:34:07,135] DEBUG [Controller id=1] Live brokers:  (kafka.controller.KafkaController)
[2024-11-17 14:34:07,225] TRACE [Controller id=1] All leaders = __consumer_offsets-49 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),my-topic-2 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-38 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-16 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-8 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-19 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-13 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-2 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-46 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-24 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-5 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-43 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-32 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-10 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-37 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),my-topic-1 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-40 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-18 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-7 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-34 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-23 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-45 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-4 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-9 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-1 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),my-topic-0 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-6 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-39 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-44 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-3 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-25 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-14 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-30 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-33 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-22 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5),__consumer_offsets-0 -> (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:5) (kafka.controller.KafkaController)
[2024-11-17 14:34:07,346] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-11-17 14:34:07,346] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-11-17 14:34:07,346] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-11-17 14:34:07,346] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2024-11-17 14:34:07,346] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2024-11-17 14:34:07,346] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-11-17 14:34:07,347] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-11-17 14:34:07,347] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2024-11-17 14:34:07,347] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2024-11-17 14:34:07,347] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2024-11-17 14:34:07,348] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2024-11-17 14:34:16,837] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-11-17 14:34:16,859] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2024-11-17 14:34:16,871] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2024-11-17 14:34:16,876] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-11-17 14:34:16,877] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-11-17 14:34:16,877] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2024-11-17 14:34:16,890] INFO [Controller id=1] Initialized broker epochs cache: Map(1 -> 446) (kafka.controller.KafkaController)
[2024-11-17 14:34:16,917] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2024-11-17 14:34:16,983] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-11-17 14:34:16,985] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2024-11-17 14:34:16,985] INFO [Controller id=1] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2024-11-17 14:34:16,985] INFO [Controller id=1] Current list of topics in the cluster: Set(__consumer_offsets, my-topic) (kafka.controller.KafkaController)
[2024-11-17 14:34:16,985] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-11-17 14:34:16,985] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-11-17 14:34:16,994] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-11-17 14:34:16,994] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets,my-topic (kafka.controller.KafkaController)
[2024-11-17 14:34:16,994] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-11-17 14:34:16,994] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(__consumer_offsets, my-topic) (kafka.controller.TopicDeletionManager)
[2024-11-17 14:34:16,995] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2024-11-17 14:34:17,012] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-11-17 14:34:17,014] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-11-17 14:34:17,016] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:34:17,027] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-11-17 14:34:17,195] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-11-17 14:34:17,270] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=my-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-11-17 14:34:17,270] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-11-17 14:34:17,271] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-11-17 14:34:17,332] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, my-topic-2 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, my-topic-1 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, my-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-11-17 14:34:17,332] INFO [Controller id=1] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2024-11-17 14:34:17,334] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-11-17 14:34:17,334] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-11-17 14:34:17,334] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-11-17 14:34:17,334] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-11-17 14:34:17,334] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-11-17 14:34:17,339] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-11-17 14:34:22,343] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-11-17 14:34:22,343] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-11-17 14:34:22,360] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map(__consumer_offsets-22 -> Vector(3, 2, 1), my-topic-2 -> Vector(3, 2), __consumer_offsets-4 -> Vector(3, 2, 1), __consumer_offsets-7 -> Vector(3, 1, 2), __consumer_offsets-46 -> Vector(3, 2, 1), __consumer_offsets-25 -> Vector(3, 1, 2), __consumer_offsets-49 -> Vector(3, 1, 2), __consumer_offsets-16 -> Vector(3, 2, 1), __consumer_offsets-28 -> Vector(3, 2, 1), __consumer_offsets-31 -> Vector(3, 1, 2), __consumer_offsets-37 -> Vector(3, 1, 2), __consumer_offsets-19 -> Vector(3, 1, 2), __consumer_offsets-13 -> Vector(3, 1, 2), __consumer_offsets-43 -> Vector(3, 1, 2), __consumer_offsets-1 -> Vector(3, 1, 2), __consumer_offsets-34 -> Vector(3, 2, 1), __consumer_offsets-10 -> Vector(3, 2, 1), __consumer_offsets-40 -> Vector(3, 2, 1)) (kafka.controller.KafkaController)
[2024-11-17 14:34:22,375] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2024-11-17 14:34:22,379] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-11-17 14:34:22,379] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(__consumer_offsets-30 -> Vector(2, 3, 1), __consumer_offsets-21 -> Vector(2, 1, 3), __consumer_offsets-27 -> Vector(2, 1, 3), __consumer_offsets-9 -> Vector(2, 1, 3), my-topic-1 -> Vector(2, 1), __consumer_offsets-33 -> Vector(2, 1, 3), __consumer_offsets-36 -> Vector(2, 3, 1), __consumer_offsets-42 -> Vector(2, 3, 1), __consumer_offsets-3 -> Vector(2, 1, 3), __consumer_offsets-18 -> Vector(2, 3, 1), __consumer_offsets-15 -> Vector(2, 1, 3), __consumer_offsets-24 -> Vector(2, 3, 1), __consumer_offsets-48 -> Vector(2, 3, 1), __consumer_offsets-6 -> Vector(2, 3, 1), __consumer_offsets-0 -> Vector(2, 3, 1), __consumer_offsets-39 -> Vector(2, 1, 3), __consumer_offsets-12 -> Vector(2, 3, 1), __consumer_offsets-45 -> Vector(2, 1, 3)) (kafka.controller.KafkaController)
[2024-11-17 14:34:22,379] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-11-17 14:34:22,379] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-11-17 14:34:22,381] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(__consumer_offsets-8 -> Vector(1, 2, 3), __consumer_offsets-35 -> Vector(1, 3, 2), __consumer_offsets-41 -> Vector(1, 3, 2), __consumer_offsets-23 -> Vector(1, 3, 2), __consumer_offsets-47 -> Vector(1, 3, 2), my-topic-0 -> Vector(1, 3), __consumer_offsets-38 -> Vector(1, 2, 3), __consumer_offsets-17 -> Vector(1, 3, 2), __consumer_offsets-11 -> Vector(1, 3, 2), __consumer_offsets-2 -> Vector(1, 2, 3), __consumer_offsets-14 -> Vector(1, 2, 3), __consumer_offsets-20 -> Vector(1, 2, 3), __consumer_offsets-44 -> Vector(1, 2, 3), __consumer_offsets-5 -> Vector(1, 3, 2), __consumer_offsets-26 -> Vector(1, 2, 3), __consumer_offsets-29 -> Vector(1, 3, 2), __consumer_offsets-32 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2024-11-17 14:34:22,381] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-11-17 14:34:22,381] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-11-17 14:35:13,143] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2024-11-17 14:35:13,144] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-11-17 14:35:13,172] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2024-11-17 14:35:13,174] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-11-17 14:35:13,185] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9093 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:35:13,236] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-11-17 14:35:13,255] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-11-17 14:35:13,283] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2024-11-17 14:35:13,288] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9093 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:35:13,288] INFO [Controller id=1] Updated broker epochs cache: Map(2 -> 517, 1 -> 446) (kafka.controller.KafkaController)
[2024-11-17 14:35:13,392] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9093 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:35:13,493] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9093 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:35:13,637] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-11-17 14:35:14,400] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-topic-1). (kafka.controller.KafkaController)
[2024-11-17 14:35:14,406] DEBUG [Controller id=1] ISR for partition my-topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:16,454] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2024-11-17 14:35:16,456] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2024-11-17 14:35:16,472] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2024-11-17 14:35:16,494] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-11-17 14:35:16,517] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:35:16,518] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-11-17 14:35:16,551] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-11-17 14:35:16,620] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:35:16,711] DEBUG [Controller id=1] Register BrokerModifications handler for Vector(3) (kafka.controller.KafkaController)
[2024-11-17 14:35:16,713] INFO [Controller id=1] Updated broker epochs cache: Map(2 -> 517, 1 -> 446, 3 -> 535) (kafka.controller.KafkaController)
[2024-11-17 14:35:16,721] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:35:16,912] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:35:17,019] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 14:35:17,180] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-11-17 14:35:17,955] DEBUG [Controller id=1] Updating ISRs for partitions: Set(__consumer_offsets-28). (kafka.controller.KafkaController)
[2024-11-17 14:35:17,963] DEBUG [Controller id=1] ISR for partition __consumer_offsets-28 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,013] DEBUG [Controller id=1] Updating ISRs for partitions: Set(__consumer_offsets-49, __consumer_offsets-38, __consumer_offsets-16, __consumer_offsets-27, __consumer_offsets-8, __consumer_offsets-19, __consumer_offsets-13, __consumer_offsets-2, __consumer_offsets-24, __consumer_offsets-46, __consumer_offsets-35, __consumer_offsets-5, __consumer_offsets-43, __consumer_offsets-32, __consumer_offsets-21, __consumer_offsets-10, __consumer_offsets-37, __consumer_offsets-48, __consumer_offsets-18, __consumer_offsets-40, __consumer_offsets-29, __consumer_offsets-7, __consumer_offsets-23, __consumer_offsets-34, __consumer_offsets-45, __consumer_offsets-26, __consumer_offsets-4, __consumer_offsets-15, __consumer_offsets-42, __consumer_offsets-20, __consumer_offsets-9, __consumer_offsets-31, __consumer_offsets-12, __consumer_offsets-1, my-topic-0, __consumer_offsets-17, __consumer_offsets-6, __consumer_offsets-39, __consumer_offsets-44, __consumer_offsets-36, __consumer_offsets-47, __consumer_offsets-25, __consumer_offsets-3, __consumer_offsets-14, __consumer_offsets-41, __consumer_offsets-30, __consumer_offsets-33, __consumer_offsets-11, __consumer_offsets-22, __consumer_offsets-0). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,046] DEBUG [Controller id=1] ISR for partition __consumer_offsets-22 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,046] DEBUG [Controller id=1] ISR for partition __consumer_offsets-30 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,046] DEBUG [Controller id=1] ISR for partition __consumer_offsets-8 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,046] DEBUG [Controller id=1] ISR for partition __consumer_offsets-21 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,046] DEBUG [Controller id=1] ISR for partition __consumer_offsets-4 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,046] DEBUG [Controller id=1] ISR for partition __consumer_offsets-27 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-7 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-9 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-46 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-25 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-35 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-41 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-33 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-23 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-49 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-47 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-16 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-31 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-36 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-42 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-3 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-18 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-37 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-15 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-24 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition my-topic-0 updated to LeaderAndIsr(leader=3, leaderEpoch=4, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-38 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-17 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-48 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-19 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-11 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-13 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-2 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-43 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-6 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-14 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-20 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-0 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-44 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-39 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-12 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-45 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-1 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-5 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-26 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-29 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-34 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-10 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-32 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,047] DEBUG [Controller id=1] ISR for partition __consumer_offsets-40 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,068] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-topic-2, __consumer_offsets-28). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,074] DEBUG [Controller id=1] ISR for partition my-topic-2 updated to LeaderAndIsr(leader=3, leaderEpoch=4, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,074] DEBUG [Controller id=1] ISR for partition __consumer_offsets-28 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,550] DEBUG [Controller id=1] Updating ISRs for partitions: Set(__consumer_offsets-6). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,553] DEBUG [Controller id=1] ISR for partition __consumer_offsets-6 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,563] DEBUG [Controller id=1] Updating ISRs for partitions: Set(__consumer_offsets-49, __consumer_offsets-38, __consumer_offsets-16, __consumer_offsets-27, __consumer_offsets-8, __consumer_offsets-19, __consumer_offsets-13, __consumer_offsets-2, __consumer_offsets-24, __consumer_offsets-46, __consumer_offsets-35, __consumer_offsets-5, __consumer_offsets-43, __consumer_offsets-32, __consumer_offsets-21, __consumer_offsets-10, __consumer_offsets-37, __consumer_offsets-48, __consumer_offsets-18, __consumer_offsets-40, __consumer_offsets-29, __consumer_offsets-7, __consumer_offsets-23, __consumer_offsets-34, __consumer_offsets-45, __consumer_offsets-4, __consumer_offsets-26, __consumer_offsets-15, __consumer_offsets-42, __consumer_offsets-20, __consumer_offsets-9, __consumer_offsets-31, __consumer_offsets-12, __consumer_offsets-1, __consumer_offsets-17, __consumer_offsets-39, __consumer_offsets-44, __consumer_offsets-36, __consumer_offsets-47, __consumer_offsets-25, __consumer_offsets-3, __consumer_offsets-14, __consumer_offsets-41, __consumer_offsets-30, __consumer_offsets-33, __consumer_offsets-11, __consumer_offsets-22, __consumer_offsets-0). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,595] DEBUG [Controller id=1] ISR for partition __consumer_offsets-22 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,595] DEBUG [Controller id=1] ISR for partition __consumer_offsets-30 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,595] DEBUG [Controller id=1] ISR for partition __consumer_offsets-8 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,595] DEBUG [Controller id=1] ISR for partition __consumer_offsets-21 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,595] DEBUG [Controller id=1] ISR for partition __consumer_offsets-4 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,595] DEBUG [Controller id=1] ISR for partition __consumer_offsets-27 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,595] DEBUG [Controller id=1] ISR for partition __consumer_offsets-7 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,595] DEBUG [Controller id=1] ISR for partition __consumer_offsets-9 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,595] DEBUG [Controller id=1] ISR for partition __consumer_offsets-46 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-25 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-35 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-41 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-33 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-23 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-49 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-47 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-16 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-31 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-36 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-42 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-3 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-18 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-37 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-15 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-24 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-38 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-17 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-48 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-19 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-11 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-13 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-2 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-43 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-14 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-20 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-0 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-44 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-39 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-12 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-45 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-1 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-5 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-26 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-29 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-34 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-10 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-32 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:35:18,596] DEBUG [Controller id=1] ISR for partition __consumer_offsets-40 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-11-17 14:39:22,383] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-11-17 14:39:22,384] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-11-17 14:39:22,395] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2024-11-17 14:39:22,396] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,398] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map(__consumer_offsets-30 -> Vector(2, 3, 1), __consumer_offsets-21 -> Vector(2, 1, 3), __consumer_offsets-27 -> Vector(2, 1, 3), __consumer_offsets-9 -> Vector(2, 1, 3), __consumer_offsets-33 -> Vector(2, 1, 3), __consumer_offsets-36 -> Vector(2, 3, 1), __consumer_offsets-42 -> Vector(2, 3, 1), __consumer_offsets-3 -> Vector(2, 1, 3), __consumer_offsets-18 -> Vector(2, 3, 1), __consumer_offsets-15 -> Vector(2, 1, 3), __consumer_offsets-24 -> Vector(2, 3, 1), __consumer_offsets-48 -> Vector(2, 3, 1), __consumer_offsets-6 -> Vector(2, 3, 1), __consumer_offsets-0 -> Vector(2, 3, 1), __consumer_offsets-39 -> Vector(2, 1, 3), __consumer_offsets-12 -> Vector(2, 3, 1), __consumer_offsets-45 -> Vector(2, 1, 3)) (kafka.controller.KafkaController)
[2024-11-17 14:39:22,398] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.9444444444444444 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,402] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions __consumer_offsets-30,__consumer_offsets-21,__consumer_offsets-27,__consumer_offsets-9,__consumer_offsets-33,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-48,__consumer_offsets-6,__consumer_offsets-0,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-30 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-21 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-27 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-9 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-33 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-36 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-42 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-3 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-18 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-15 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-24 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-48 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-6 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-0 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-39 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-12 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] INFO [Controller id=1] Partition __consumer_offsets-45 completed preferred replica leader election. New leader is 2 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map(__consumer_offsets-8 -> Vector(1, 2, 3), __consumer_offsets-35 -> Vector(1, 3, 2), __consumer_offsets-41 -> Vector(1, 3, 2), __consumer_offsets-23 -> Vector(1, 3, 2), __consumer_offsets-47 -> Vector(1, 3, 2), my-topic-0 -> Vector(1, 3), __consumer_offsets-38 -> Vector(1, 2, 3), __consumer_offsets-17 -> Vector(1, 3, 2), __consumer_offsets-11 -> Vector(1, 3, 2), __consumer_offsets-2 -> Vector(1, 2, 3), __consumer_offsets-14 -> Vector(1, 2, 3), __consumer_offsets-20 -> Vector(1, 2, 3), __consumer_offsets-44 -> Vector(1, 2, 3), __consumer_offsets-5 -> Vector(1, 3, 2), __consumer_offsets-26 -> Vector(1, 2, 3), __consumer_offsets-29 -> Vector(1, 3, 2), __consumer_offsets-32 -> Vector(1, 2, 3)) (kafka.controller.KafkaController)
[2024-11-17 14:39:22,445] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,455] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions __consumer_offsets-8,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-23,__consumer_offsets-47,my-topic-0,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-44,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-32 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-8 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-35 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-41 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-23 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-47 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition my-topic-0 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-38 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-17 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-11 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-2 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-14 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-20 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-44 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-5 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-26 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-29 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:39:22,498] INFO [Controller id=1] Partition __consumer_offsets-32 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-11-17 14:42:32,976] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=0, size=1000), Zk path version 1 (kafka.controller.KafkaController)
[2024-11-17 14:42:32,999] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=1000, size=1000) by writing to Zk with path version 2 (kafka.controller.KafkaController)
[2024-11-17 14:42:33,105] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=1000, size=1000), Zk path version 2 (kafka.controller.KafkaController)
[2024-11-17 14:42:33,107] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=2000, size=1000) by writing to Zk with path version 3 (kafka.controller.KafkaController)
[2024-11-17 14:42:36,566] INFO [Controller id=1] New topics: [Set(your_topic)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(your_topic,Some(C3ngdXLfRxS27W3DkOX53Q),Map(your_topic-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-11-17 14:42:36,568] INFO [Controller id=1] New partition creation callback for your_topic-0 (kafka.controller.KafkaController)
[2024-11-17 14:44:22,499] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-11-17 14:44:22,500] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-11-17 14:44:22,504] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2024-11-17 14:44:22,504] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:44:22,504] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2024-11-17 14:44:22,504] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:44:22,505] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2024-11-17 14:44:22,505] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:44:26,721] INFO [Controller id=1] New topics: [Set(yommy-topic)], deleted topics: [Set()], new partition replica assignment [Set(TopicIdReplicaAssignment(yommy-topic,Some(6rdtq1EPSfCSzOezTn6tTg),Map(yommy-topic-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-11-17 14:44:26,721] INFO [Controller id=1] New partition creation callback for yommy-topic-0 (kafka.controller.KafkaController)
[2024-11-17 14:49:22,507] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-11-17 14:49:22,507] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-11-17 14:49:22,509] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2024-11-17 14:49:22,510] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:49:22,510] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2024-11-17 14:49:22,510] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:49:22,510] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2024-11-17 14:49:22,510] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:54:22,513] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-11-17 14:54:22,514] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-11-17 14:54:22,520] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2024-11-17 14:54:22,521] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:54:22,521] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2024-11-17 14:54:22,521] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:54:22,521] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2024-11-17 14:54:22,521] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:59:22,522] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-11-17 14:59:22,523] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-11-17 14:59:22,525] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2024-11-17 14:59:22,525] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:59:22,525] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2024-11-17 14:59:22,525] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-11-17 14:59:22,525] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2024-11-17 14:59:22,525] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
