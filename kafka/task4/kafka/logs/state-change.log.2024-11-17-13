[2024-11-17 13:19:08,348] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers Set(1) for 0 partitions (state.change.logger)
[2024-11-17 13:20:10,443] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:20:14,023] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set(1) for 0 partitions (state.change.logger)
[2024-11-17 13:20:25,465] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set(1) for 0 partitions (state.change.logger)
[2024-11-17 13:20:25,467] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set(2) for 0 partitions (state.change.logger)
[2024-11-17 13:20:44,532] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set(1, 2) for 0 partitions (state.change.logger)
[2024-11-17 13:20:44,536] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set(3) for 0 partitions (state.change.logger)
[2024-11-17 13:22:50,094] INFO [Controller id=1 epoch=2] Changed partition my-topic-2 state from NonExistentPartition to NewPartition with assigned replicas 3,2 (state.change.logger)
[2024-11-17 13:22:50,094] INFO [Controller id=1 epoch=2] Changed partition my-topic-1 state from NonExistentPartition to NewPartition with assigned replicas 2,1 (state.change.logger)
[2024-11-17 13:22:50,094] INFO [Controller id=1 epoch=2] Changed partition my-topic-0 state from NonExistentPartition to NewPartition with assigned replicas 1,3 (state.change.logger)
[2024-11-17 13:22:50,094] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:22:50,095] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:22:50,110] INFO [Controller id=1 epoch=2] Changed partition my-topic-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:22:50,110] INFO [Controller id=1 epoch=2] Changed partition my-topic-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:22:50,110] INFO [Controller id=1 epoch=2] Changed partition my-topic-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:22:50,111] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2024-11-17 13:22:50,113] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2024-11-17 13:22:50,113] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 3 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2024-11-17 13:22:50,115] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2024-11-17 13:22:50,125] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set(1, 2, 3) for 3 partitions (state.change.logger)
[2024-11-17 13:22:50,136] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:22:50,147] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 1 partitions (state.change.logger)
[2024-11-17 13:22:50,148] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 2 from controller 1 for 2 partitions (state.change.logger)
[2024-11-17 13:22:50,149] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 2 partitions (state.change.logger)
[2024-11-17 13:22:50,202] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 2 as part of the become-leader transition for 1 partitions (state.change.logger)
[2024-11-17 13:22:50,204] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 2 from controller 1 epoch 2 as part of the become-leader transition for 1 partitions (state.change.logger)
[2024-11-17 13:22:50,227] INFO [Broker id=1] Leader my-topic-0 with topic id Some(nfJFDJl4Ty6A_UkcJNI4AQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:22:50,245] INFO [Broker id=1] Follower my-topic-1 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:22:50,245] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 3 for 1 partitions (state.change.logger)
[2024-11-17 13:22:50,278] INFO [Broker id=1] Finished LeaderAndIsr request in 163ms correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2024-11-17 13:22:50,283] INFO [Broker id=1] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2024-11-17 13:22:50,368] INFO [Broker id=3] Leader my-topic-2 with topic id Some(nfJFDJl4Ty6A_UkcJNI4AQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:22:50,373] INFO [Broker id=2] Leader my-topic-1 with topic id Some(nfJFDJl4Ty6A_UkcJNI4AQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:22:50,392] INFO [Broker id=3] Follower my-topic-0 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:22:50,395] INFO [Broker id=2] Follower my-topic-2 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:22:50,396] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 1 for 1 partitions (state.change.logger)
[2024-11-17 13:22:50,398] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 2 for 1 partitions (state.change.logger)
[2024-11-17 13:22:50,442] INFO [Broker id=3] Finished LeaderAndIsr request in 313ms correlationId 1 from controller 1 for 2 partitions (state.change.logger)
[2024-11-17 13:22:50,455] INFO [Broker id=3] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2024-11-17 13:22:50,457] INFO [Broker id=2] Finished LeaderAndIsr request in 338ms correlationId 2 from controller 1 for 2 partitions (state.change.logger)
[2024-11-17 13:22:50,463] INFO [Broker id=2] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 3 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 2,1,3 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 2,1,3 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 3,1,2 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 2,1,3 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 3,1,2 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 1,3,2 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 1,3,2 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 2,1,3 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 1,3,2 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 3,1,2 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 1,3,2 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 3,1,2 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 2,1,3 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 3,1,2 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 2,1,3 (state.change.logger)
[2024-11-17 13:37:32,969] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 1,3,2 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 3,1,2 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 1,3,2 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 3,1,2 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 3,1,2 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 2,1,3 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 2,3,1 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 2,1,3 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 3,1,2 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 1,3,2 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 1,3,2 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 1,2,3 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 3,2,1 (state.change.logger)
[2024-11-17 13:37:32,970] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:37:32,972] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,030] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,031] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,031] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,031] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,031] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,031] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,031] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,031] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,031] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,031] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2024-11-17 13:37:33,031] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 33 become-follower partitions (state.change.logger)
[2024-11-17 13:37:33,035] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 16 become-leader and 34 become-follower partitions (state.change.logger)
[2024-11-17 13:37:33,043] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 50 partitions (state.change.logger)
[2024-11-17 13:37:33,045] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 4 from controller 1 for 50 partitions (state.change.logger)
[2024-11-17 13:37:33,064] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 33 become-follower partitions (state.change.logger)
[2024-11-17 13:37:33,068] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set(1, 2, 3) for 50 partitions (state.change.logger)
[2024-11-17 13:37:33,071] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:37:33,080] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 for 50 partitions (state.change.logger)
[2024-11-17 13:37:33,112] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 2 as part of the become-leader transition for 16 partitions (state.change.logger)
[2024-11-17 13:37:33,130] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 4 from controller 1 epoch 2 as part of the become-leader transition for 17 partitions (state.change.logger)
[2024-11-17 13:37:33,139] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 17 partitions (state.change.logger)
[2024-11-17 13:37:33,153] INFO [Broker id=1] Leader __consumer_offsets-29 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,3,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,166] INFO [Broker id=1] Leader __consumer_offsets-26 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,181] INFO [Broker id=1] Leader __consumer_offsets-23 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,3,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,182] INFO [Broker id=2] Leader __consumer_offsets-0 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,190] INFO [Broker id=1] Leader __consumer_offsets-20 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,194] INFO [Broker id=2] Leader __consumer_offsets-48 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,198] INFO [Broker id=1] Leader __consumer_offsets-17 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,3,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,203] INFO [Broker id=3] Leader __consumer_offsets-10 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,2,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,205] INFO [Broker id=2] Leader __consumer_offsets-45 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,211] INFO [Broker id=1] Leader __consumer_offsets-14 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,212] INFO [Broker id=2] Leader __consumer_offsets-42 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,215] INFO [Broker id=3] Leader __consumer_offsets-7 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,1,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,221] INFO [Broker id=1] Leader __consumer_offsets-11 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,3,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,221] INFO [Broker id=2] Leader __consumer_offsets-39 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,227] INFO [Broker id=1] Leader __consumer_offsets-8 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,233] INFO [Broker id=3] Leader __consumer_offsets-4 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,2,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,238] INFO [Broker id=2] Leader __consumer_offsets-36 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,240] INFO [Broker id=1] Leader __consumer_offsets-5 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,3,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,248] INFO [Broker id=3] Leader __consumer_offsets-1 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,1,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,257] INFO [Broker id=2] Leader __consumer_offsets-33 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,258] INFO [Broker id=1] Leader __consumer_offsets-2 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,265] INFO [Broker id=3] Leader __consumer_offsets-49 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,1,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,267] INFO [Broker id=2] Leader __consumer_offsets-30 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,267] INFO [Broker id=1] Leader __consumer_offsets-47 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,3,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,274] INFO [Broker id=2] Leader __consumer_offsets-27 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,276] INFO [Broker id=1] Leader __consumer_offsets-38 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,282] INFO [Broker id=2] Leader __consumer_offsets-24 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,284] INFO [Broker id=3] Leader __consumer_offsets-46 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,2,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,292] INFO [Broker id=1] Leader __consumer_offsets-35 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,3,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,292] INFO [Broker id=2] Leader __consumer_offsets-21 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,297] INFO [Broker id=2] Leader __consumer_offsets-18 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,303] INFO [Broker id=3] Leader __consumer_offsets-43 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,1,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,306] INFO [Broker id=2] Leader __consumer_offsets-15 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,311] INFO [Broker id=2] Leader __consumer_offsets-12 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,311] INFO [Broker id=1] Leader __consumer_offsets-44 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,327] INFO [Broker id=3] Leader __consumer_offsets-40 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,2,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,328] INFO [Broker id=2] Leader __consumer_offsets-9 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,352] INFO [Broker id=1] Leader __consumer_offsets-41 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,3,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,361] INFO [Broker id=2] Leader __consumer_offsets-6 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,367] INFO [Broker id=1] Leader __consumer_offsets-32 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,370] INFO [Broker id=2] Leader __consumer_offsets-3 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,1,3], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,372] INFO [Broker id=3] Leader __consumer_offsets-37 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,1,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,381] INFO [Broker id=3] Leader __consumer_offsets-34 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,2,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,389] INFO [Broker id=1] Follower __consumer_offsets-0 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,392] INFO [Broker id=3] Leader __consumer_offsets-31 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,1,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,396] INFO [Broker id=2] Follower __consumer_offsets-29 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,405] INFO [Broker id=2] Follower __consumer_offsets-10 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,408] INFO [Broker id=3] Leader __consumer_offsets-19 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,1,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,410] INFO [Broker id=1] Follower __consumer_offsets-48 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,416] INFO [Broker id=2] Follower __consumer_offsets-26 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,422] INFO [Broker id=3] Leader __consumer_offsets-28 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,2,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,430] INFO [Broker id=2] Follower __consumer_offsets-7 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,431] INFO [Broker id=1] Follower __consumer_offsets-10 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,435] INFO [Broker id=2] Follower __consumer_offsets-23 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,439] INFO [Broker id=1] Follower __consumer_offsets-45 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,440] INFO [Broker id=3] Leader __consumer_offsets-25 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,1,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,442] INFO [Broker id=2] Follower __consumer_offsets-4 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,448] INFO [Broker id=2] Follower __consumer_offsets-20 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,450] INFO [Broker id=1] Follower __consumer_offsets-7 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,453] INFO [Broker id=2] Follower __consumer_offsets-1 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,454] INFO [Broker id=3] Leader __consumer_offsets-16 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,2,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,460] INFO [Broker id=1] Follower __consumer_offsets-42 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,462] INFO [Broker id=2] Follower __consumer_offsets-17 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,469] INFO [Broker id=1] Follower __consumer_offsets-4 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,469] INFO [Broker id=3] Leader __consumer_offsets-22 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,2,1], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,476] INFO [Broker id=2] Follower __consumer_offsets-14 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,477] INFO [Broker id=1] Follower __consumer_offsets-39 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,479] INFO [Broker id=1] Follower __consumer_offsets-1 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,482] INFO [Broker id=3] Leader __consumer_offsets-13 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [3,1,2], adding replicas [] and removing replicas [] . Previous leader None and previous leader epoch was -1. (state.change.logger)
[2024-11-17 13:37:33,484] INFO [Broker id=1] Follower __consumer_offsets-36 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,490] INFO [Broker id=1] Follower __consumer_offsets-33 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,496] INFO [Broker id=1] Follower __consumer_offsets-49 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,497] INFO [Broker id=3] Follower __consumer_offsets-0 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,500] INFO [Broker id=2] Follower __consumer_offsets-49 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,507] INFO [Broker id=3] Follower __consumer_offsets-29 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,508] INFO [Broker id=1] Follower __consumer_offsets-30 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,508] INFO [Broker id=2] Follower __consumer_offsets-11 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,513] INFO [Broker id=2] Follower __consumer_offsets-46 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,517] INFO [Broker id=3] Follower __consumer_offsets-48 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,526] INFO [Broker id=1] Follower __consumer_offsets-46 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,530] INFO [Broker id=2] Follower __consumer_offsets-8 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,532] INFO [Broker id=1] Follower __consumer_offsets-27 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,537] INFO [Broker id=3] Follower __consumer_offsets-45 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,538] INFO [Broker id=1] Follower __consumer_offsets-24 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,542] INFO [Broker id=1] Follower __consumer_offsets-43 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,543] INFO [Broker id=2] Follower __consumer_offsets-43 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,547] INFO [Broker id=3] Follower __consumer_offsets-26 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,548] INFO [Broker id=1] Follower __consumer_offsets-40 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,553] INFO [Broker id=3] Follower __consumer_offsets-42 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,554] INFO [Broker id=2] Follower __consumer_offsets-5 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,557] INFO [Broker id=2] Follower __consumer_offsets-2 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,559] INFO [Broker id=2] Follower __consumer_offsets-40 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,561] INFO [Broker id=2] Follower __consumer_offsets-37 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,563] INFO [Broker id=2] Follower __consumer_offsets-34 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,564] INFO [Broker id=2] Follower __consumer_offsets-31 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,566] INFO [Broker id=2] Follower __consumer_offsets-47 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,567] INFO [Broker id=1] Follower __consumer_offsets-21 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,570] INFO [Broker id=1] Follower __consumer_offsets-37 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,576] INFO [Broker id=1] Follower __consumer_offsets-18 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,577] INFO [Broker id=3] Follower __consumer_offsets-23 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,580] INFO [Broker id=2] Follower __consumer_offsets-19 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,581] INFO [Broker id=1] Follower __consumer_offsets-34 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,584] INFO [Broker id=3] Follower __consumer_offsets-20 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,586] INFO [Broker id=2] Follower __consumer_offsets-28 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,590] INFO [Broker id=1] Follower __consumer_offsets-15 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,591] INFO [Broker id=3] Follower __consumer_offsets-39 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,595] INFO [Broker id=2] Follower __consumer_offsets-38 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,596] INFO [Broker id=3] Follower __consumer_offsets-17 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,608] INFO [Broker id=1] Follower __consumer_offsets-31 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,612] INFO [Broker id=1] Follower __consumer_offsets-12 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,614] INFO [Broker id=2] Follower __consumer_offsets-35 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,615] INFO [Broker id=1] Follower __consumer_offsets-9 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,618] INFO [Broker id=2] Follower __consumer_offsets-44 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,621] INFO [Broker id=1] Follower __consumer_offsets-19 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,626] INFO [Broker id=2] Follower __consumer_offsets-25 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,628] INFO [Broker id=1] Follower __consumer_offsets-28 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,629] INFO [Broker id=3] Follower __consumer_offsets-36 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,633] INFO [Broker id=2] Follower __consumer_offsets-16 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,633] INFO [Broker id=1] Follower __consumer_offsets-6 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,636] INFO [Broker id=3] Follower __consumer_offsets-14 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,638] INFO [Broker id=1] Follower __consumer_offsets-25 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,640] INFO [Broker id=2] Follower __consumer_offsets-22 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,643] INFO [Broker id=3] Follower __consumer_offsets-33 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,648] INFO [Broker id=1] Follower __consumer_offsets-16 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,652] INFO [Broker id=3] Follower __consumer_offsets-11 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,653] INFO [Broker id=2] Follower __consumer_offsets-41 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,663] INFO [Broker id=2] Follower __consumer_offsets-32 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,665] INFO [Broker id=1] Follower __consumer_offsets-22 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,667] INFO [Broker id=3] Follower __consumer_offsets-30 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,670] INFO [Broker id=2] Follower __consumer_offsets-13 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,670] INFO [Broker id=3] Follower __consumer_offsets-27 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,671] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 4 for 33 partitions (state.change.logger)
[2024-11-17 13:37:33,675] INFO [Broker id=3] Follower __consumer_offsets-8 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,677] INFO [Broker id=3] Follower __consumer_offsets-24 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,682] INFO [Broker id=1] Follower __consumer_offsets-3 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,686] INFO [Broker id=3] Follower __consumer_offsets-5 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,691] INFO [Broker id=3] Follower __consumer_offsets-21 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,702] INFO [Broker id=3] Follower __consumer_offsets-2 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,716] INFO [Broker id=2] Finished LeaderAndIsr request in 671ms correlationId 4 from controller 1 for 50 partitions (state.change.logger)
[2024-11-17 13:37:33,718] INFO [Broker id=3] Follower __consumer_offsets-18 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,723] INFO [Broker id=2] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 5 (state.change.logger)
[2024-11-17 13:37:33,724] INFO [Broker id=1] Follower __consumer_offsets-13 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,725] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 5 for 34 partitions (state.change.logger)
[2024-11-17 13:37:33,742] INFO [Broker id=3] Follower __consumer_offsets-15 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,748] INFO [Broker id=1] Finished LeaderAndIsr request in 705ms correlationId 5 from controller 1 for 50 partitions (state.change.logger)
[2024-11-17 13:37:33,749] INFO [Broker id=1] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2024-11-17 13:37:33,750] INFO [Broker id=3] Follower __consumer_offsets-12 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,753] INFO [Broker id=3] Follower __consumer_offsets-47 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,761] INFO [Broker id=3] Follower __consumer_offsets-9 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,764] INFO [Broker id=3] Follower __consumer_offsets-38 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,768] INFO [Broker id=3] Follower __consumer_offsets-35 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,774] INFO [Broker id=3] Follower __consumer_offsets-6 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,778] INFO [Broker id=3] Follower __consumer_offsets-44 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,779] INFO [Broker id=3] Follower __consumer_offsets-41 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,781] INFO [Broker id=3] Follower __consumer_offsets-32 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,786] INFO [Broker id=3] Follower __consumer_offsets-3 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:37:33,786] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 3 for 33 partitions (state.change.logger)
[2024-11-17 13:37:33,822] INFO [Broker id=3] Finished LeaderAndIsr request in 742ms correlationId 3 from controller 1 for 50 partitions (state.change.logger)
[2024-11-17 13:37:33,827] INFO [Broker id=3] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2024-11-17 13:59:15,623] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-8 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-35 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-41 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-23 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-47 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition my-topic-0 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-38 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-17 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-11 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-14 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-20 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-44 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-5 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-26 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-29 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-32 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=1) (state.change.logger)
[2024-11-17 13:59:15,624] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 8 become-leader and 8 become-follower partitions (state.change.logger)
[2024-11-17 13:59:15,627] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 17 become-follower partitions (state.change.logger)
[2024-11-17 13:59:15,628] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 6 from controller 1 for 16 partitions (state.change.logger)
[2024-11-17 13:59:15,628] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 7 from controller 1 for 17 partitions (state.change.logger)
[2024-11-17 13:59:15,629] INFO [Broker id=1] Follower __consumer_offsets-29 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,629] INFO [Broker id=1] Follower __consumer_offsets-26 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,629] INFO [Broker id=1] Follower __consumer_offsets-23 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,629] INFO [Broker id=1] Follower __consumer_offsets-20 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,629] INFO [Broker id=1] Follower __consumer_offsets-17 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,629] INFO [Broker id=1] Follower __consumer_offsets-14 starts at leader epoch 1 from offset 3 with partition epoch 1 and high watermark 3. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,629] INFO [Broker id=1] Follower __consumer_offsets-11 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,629] INFO [Broker id=1] Follower __consumer_offsets-8 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,629] INFO [Broker id=1] Follower __consumer_offsets-5 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,629] INFO [Broker id=1] Follower __consumer_offsets-2 starts at leader epoch 1 from offset 3 with partition epoch 1 and high watermark 3. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,630] INFO [Broker id=1] Follower my-topic-0 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,630] INFO [Broker id=1] Follower __consumer_offsets-47 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,630] INFO [Broker id=1] Follower __consumer_offsets-38 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,630] INFO [Broker id=1] Follower __consumer_offsets-35 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,630] INFO [Broker id=1] Follower __consumer_offsets-44 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,630] INFO [Broker id=1] Follower __consumer_offsets-41 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,630] INFO [Broker id=1] Follower __consumer_offsets-32 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,630] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 7 for 17 partitions (state.change.logger)
[2024-11-17 13:59:15,632] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 3 with 9 become-leader and 8 become-follower partitions (state.change.logger)
[2024-11-17 13:59:15,633] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set(1, 2, 3) for 17 partitions (state.change.logger)
[2024-11-17 13:59:15,635] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 5 from controller 1 for 17 partitions (state.change.logger)
[2024-11-17 13:59:15,640] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 6 from controller 1 epoch 2 as part of the become-leader transition for 8 partitions (state.change.logger)
[2024-11-17 13:59:15,644] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 2 as part of the become-leader transition for 9 partitions (state.change.logger)
[2024-11-17 13:59:15,645] INFO [Broker id=2] Leader __consumer_offsets-26 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,654] INFO [Broker id=2] Leader __consumer_offsets-20 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,657] INFO [Broker id=2] Leader __consumer_offsets-14 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 3 with partition epoch 1, high watermark 3, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,660] INFO [Broker id=2] Leader __consumer_offsets-8 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,661] INFO [Broker id=2] Leader __consumer_offsets-2 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 3 with partition epoch 1, high watermark 3, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,664] INFO [Broker id=2] Leader __consumer_offsets-38 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,667] INFO [Broker id=2] Leader __consumer_offsets-44 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,669] INFO [Broker id=2] Leader __consumer_offsets-32 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,670] INFO [Broker id=3] Leader __consumer_offsets-29 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,671] INFO [Broker id=2] Follower __consumer_offsets-29 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,671] INFO [Broker id=2] Follower __consumer_offsets-23 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,671] INFO [Broker id=2] Follower __consumer_offsets-17 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,671] INFO [Broker id=2] Follower __consumer_offsets-11 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,671] INFO [Broker id=2] Follower __consumer_offsets-5 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,671] INFO [Broker id=2] Follower __consumer_offsets-47 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,671] INFO [Broker id=2] Follower __consumer_offsets-35 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,671] INFO [Broker id=2] Follower __consumer_offsets-41 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,673] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 6 for 8 partitions (state.change.logger)
[2024-11-17 13:59:15,711] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:15,719] INFO [Broker id=3] Leader __consumer_offsets-23 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,722] INFO [Broker id=3] Leader __consumer_offsets-17 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,723] INFO [Controller id=1 epoch=2] Sending StopReplica request for 35 replicas to broker 1 (state.change.logger)
[2024-11-17 13:59:15,725] INFO [Broker id=3] Leader __consumer_offsets-11 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,730] INFO [Broker id=3] Leader __consumer_offsets-5 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,736] INFO [Broker id=3] Leader my-topic-0 with topic id Some(nfJFDJl4Ty6A_UkcJNI4AQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,757] INFO [Broker id=3] Leader __consumer_offsets-47 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,775] INFO [Broker id=3] Leader __consumer_offsets-35 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,782] INFO [Broker id=2] Finished LeaderAndIsr request in 154ms correlationId 6 from controller 1 for 16 partitions (state.change.logger)
[2024-11-17 13:59:15,783] INFO [Broker id=3] Leader __consumer_offsets-41 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(1) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,792] INFO [Broker id=3] Follower __consumer_offsets-26 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,796] INFO [Broker id=1] Finished LeaderAndIsr request in 168ms correlationId 7 from controller 1 for 17 partitions (state.change.logger)
[2024-11-17 13:59:15,798] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 7 (state.change.logger)
[2024-11-17 13:59:15,798] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2024-11-17 13:59:15,807] INFO [Broker id=1] Handling StopReplica request correlationId 9 from controller 1 for 35 partitions (state.change.logger)
[2024-11-17 13:59:15,838] INFO [Broker id=3] Follower __consumer_offsets-20 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,838] INFO [Broker id=3] Follower __consumer_offsets-14 starts at leader epoch 1 from offset 3 with partition epoch 1 and high watermark 3. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,838] INFO [Broker id=3] Follower __consumer_offsets-8 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,838] INFO [Broker id=3] Follower __consumer_offsets-2 starts at leader epoch 1 from offset 3 with partition epoch 1 and high watermark 3. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,838] INFO [Broker id=3] Follower __consumer_offsets-38 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,838] INFO [Broker id=3] Follower __consumer_offsets-44 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,838] INFO [Broker id=3] Follower __consumer_offsets-32 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:15,839] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 5 for 8 partitions (state.change.logger)
[2024-11-17 13:59:15,871] INFO [Broker id=3] Finished LeaderAndIsr request in 236ms correlationId 5 from controller 1 for 17 partitions (state.change.logger)
[2024-11-17 13:59:15,873] INFO [Broker id=3] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2024-11-17 13:59:15,920] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-22 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-30 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-21 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-4 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-27 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-7 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-9 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-46 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition my-topic-1 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-25 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-33 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-49 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,921] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-16 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-28 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-31 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-36 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-42 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-3 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-18 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-37 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-15 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-24 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-48 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-19 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,922] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-13 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,923] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-43 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,924] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-6 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,924] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-0 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,924] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-39 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,924] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-12 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,924] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-45 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,924] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-1 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,924] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-34 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,924] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-10 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,925] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-40 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:15,926] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 18 become-leader and 17 become-follower partitions (state.change.logger)
[2024-11-17 13:59:15,927] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 17 become-follower partitions (state.change.logger)
[2024-11-17 13:59:15,927] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 8 from controller 1 for 35 partitions (state.change.logger)
[2024-11-17 13:59:15,927] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers Set(1, 2, 3) for 35 partitions (state.change.logger)
[2024-11-17 13:59:15,927] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 8 from controller 1 epoch 2 as part of the become-leader transition for 18 partitions (state.change.logger)
[2024-11-17 13:59:15,928] INFO [Broker id=2] Leader __consumer_offsets-0 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,928] INFO [Controller id=1 epoch=2] Sending StopReplica request for 35 replicas to broker 1 (state.change.logger)
[2024-11-17 13:59:15,929] INFO [Broker id=1] Add 35 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 10 (state.change.logger)
[2024-11-17 13:59:15,929] INFO [Broker id=1] Handling StopReplica request correlationId 11 from controller 1 for 35 partitions (state.change.logger)
[2024-11-17 13:59:15,936] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 7 from controller 1 for 34 partitions (state.change.logger)
[2024-11-17 13:59:15,938] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 7 from controller 1 epoch 2 as part of the become-leader transition for 17 partitions (state.change.logger)
[2024-11-17 13:59:15,946] INFO [Broker id=3] Leader __consumer_offsets-10 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,948] INFO [Broker id=2] Leader __consumer_offsets-48 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,953] INFO [Broker id=3] Leader __consumer_offsets-7 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,966] INFO [Broker id=2] Leader __consumer_offsets-45 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,973] INFO [Broker id=3] Leader __consumer_offsets-4 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 3 with partition epoch 1, high watermark 3, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,973] INFO [Broker id=2] Leader __consumer_offsets-42 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,974] INFO [Broker id=3] Leader __consumer_offsets-1 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,976] INFO [Broker id=3] Leader __consumer_offsets-49 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,977] INFO [Broker id=3] Leader __consumer_offsets-46 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,979] INFO [Broker id=3] Leader __consumer_offsets-43 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,981] INFO [Broker id=2] Leader __consumer_offsets-39 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 1 with partition epoch 1, high watermark 1, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,981] INFO [Broker id=3] Leader __consumer_offsets-40 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,982] INFO [Broker id=3] Leader __consumer_offsets-37 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,985] INFO [Broker id=3] Leader __consumer_offsets-34 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,988] INFO [Broker id=3] Leader __consumer_offsets-31 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,992] INFO [Broker id=3] Leader __consumer_offsets-19 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,994] INFO [Broker id=2] Leader __consumer_offsets-36 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,995] INFO [Broker id=3] Leader __consumer_offsets-28 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:15,998] INFO [Broker id=2] Leader __consumer_offsets-33 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,007] INFO [Broker id=3] Leader __consumer_offsets-25 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,014] INFO [Broker id=2] Leader __consumer_offsets-30 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,014] INFO [Broker id=3] Leader __consumer_offsets-16 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,019] INFO [Broker id=3] Leader __consumer_offsets-22 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,023] INFO [Broker id=3] Leader __consumer_offsets-13 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3,2], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,024] INFO [Broker id=2] Leader __consumer_offsets-27 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,026] INFO [Broker id=3] Follower __consumer_offsets-0 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,026] INFO [Broker id=3] Follower __consumer_offsets-48 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-45 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-42 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-39 starts at leader epoch 1 from offset 1 with partition epoch 1 and high watermark 1. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-36 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-33 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-30 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-27 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-24 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-21 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-18 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-15 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-12 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,032] INFO [Broker id=3] Follower __consumer_offsets-9 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,033] INFO [Broker id=3] Follower __consumer_offsets-6 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,033] INFO [Broker id=3] Follower __consumer_offsets-3 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 2. Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,036] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 7 for 17 partitions (state.change.logger)
[2024-11-17 13:59:16,038] INFO [Broker id=2] Leader __consumer_offsets-24 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,041] INFO [Broker id=2] Leader __consumer_offsets-21 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,055] INFO [Broker id=2] Leader __consumer_offsets-18 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,056] INFO [Broker id=3] Finished LeaderAndIsr request in 120ms correlationId 7 from controller 1 for 34 partitions (state.change.logger)
[2024-11-17 13:59:16,061] INFO [Broker id=2] Leader __consumer_offsets-15 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,064] INFO [Broker id=2] Leader __consumer_offsets-12 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,066] INFO [Broker id=3] Add 35 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2024-11-17 13:59:16,070] INFO [Broker id=2] Leader __consumer_offsets-9 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,073] INFO [Broker id=2] Leader my-topic-1 with topic id Some(nfJFDJl4Ty6A_UkcJNI4AQ) starts at leader epoch 1 from offset 3 with partition epoch 1, high watermark 3, ISR [2], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,074] INFO [Broker id=2] Leader __consumer_offsets-6 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,076] INFO [Broker id=2] Leader __consumer_offsets-3 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [2,3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:16,078] INFO [Broker id=2] Follower __consumer_offsets-10 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,078] INFO [Broker id=2] Follower __consumer_offsets-7 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,078] INFO [Broker id=2] Follower __consumer_offsets-4 starts at leader epoch 1 from offset 3 with partition epoch 1 and high watermark 3. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,078] INFO [Broker id=2] Follower __consumer_offsets-1 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,078] INFO [Broker id=2] Follower __consumer_offsets-49 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,078] INFO [Broker id=2] Follower __consumer_offsets-46 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,078] INFO [Broker id=2] Follower __consumer_offsets-43 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,078] INFO [Broker id=2] Follower __consumer_offsets-40 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,078] INFO [Broker id=2] Follower __consumer_offsets-37 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,078] INFO [Broker id=2] Follower __consumer_offsets-34 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,080] INFO [Broker id=2] Follower __consumer_offsets-31 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,080] INFO [Broker id=2] Follower __consumer_offsets-19 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,080] INFO [Broker id=2] Follower __consumer_offsets-28 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,080] INFO [Broker id=2] Follower __consumer_offsets-25 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,080] INFO [Broker id=2] Follower __consumer_offsets-16 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,080] INFO [Broker id=2] Follower __consumer_offsets-22 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,080] INFO [Broker id=2] Follower __consumer_offsets-13 starts at leader epoch 1 from offset 0 with partition epoch 1 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:16,093] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 8 for 17 partitions (state.change.logger)
[2024-11-17 13:59:16,113] INFO [Broker id=2] Finished LeaderAndIsr request in 186ms correlationId 8 from controller 1 for 35 partitions (state.change.logger)
[2024-11-17 13:59:16,117] INFO [Broker id=2] Add 35 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 9 (state.change.logger)
[2024-11-17 13:59:16,667] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set(2, 3) for 0 partitions (state.change.logger)
[2024-11-17 13:59:16,707] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 2 with 26 become-leader and 26 become-follower partitions (state.change.logger)
[2024-11-17 13:59:16,709] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 3 with 27 become-leader and 25 become-follower partitions (state.change.logger)
[2024-11-17 13:59:16,709] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 2 for 52 partitions (state.change.logger)
[2024-11-17 13:59:16,709] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set(2, 3) for 53 partitions (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition my-topic-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition my-topic-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-49 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-38 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-16 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-27 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-19 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-8 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-13 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-46 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 2 for 52 partitions (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition my-topic-2 since its associated leader epoch 0 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition my-topic-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-49 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-38 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-27 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-16 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-8 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-19 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-13 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-46 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-35 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-24 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-5 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-43 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-32 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-21 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-10 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-37 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-48 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-18 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-40 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-29 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-7 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-34 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-45 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-23 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-26 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-15 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-42 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-9 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-31 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-20 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-12 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-17 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-28 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-6 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-39 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-44 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-36 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-47 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-14 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-25 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,712] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-30 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-41 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-22 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-11 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-33 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,710] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-24 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-35 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-5 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-43 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-32 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-21 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-10 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-37 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-48 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-29 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-40 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,713] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-18 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-7 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-34 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-45 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-23 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-26 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-15 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-42 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-31 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-20 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-9 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-12 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-17 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-28 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-6 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-39 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-44 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-47 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-36 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-14 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-25 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-30 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-41 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-22 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-11 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-33 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 1 epoch 3 for partition __consumer_offsets-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,714] INFO [Broker id=2] Finished LeaderAndIsr request in 5ms correlationId 1 from controller 2 for 52 partitions (state.change.logger)
[2024-11-17 13:59:16,715] INFO [Broker id=3] Finished LeaderAndIsr request in 5ms correlationId 1 from controller 2 for 52 partitions (state.change.logger)
[2024-11-17 13:59:16,716] INFO [Broker id=2] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 2 (state.change.logger)
[2024-11-17 13:59:16,717] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 2 (state.change.logger)
[2024-11-17 13:59:16,732] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-22 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,732] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-30 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-8 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-21 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-4 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-27 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-7 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-9 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-46 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition my-topic-1 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-25 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-35 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-41 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,733] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-33 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-23 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-49 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-47 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-16 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-28 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-31 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-36 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-42 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-3 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-18 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-37 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,734] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-15 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,735] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-24 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,735] INFO [Controller id=2 epoch=3] Partition my-topic-0 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,735] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-38 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,735] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-17 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,735] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-48 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,735] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-19 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-11 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-13 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-2 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-43 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-6 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-14 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-20 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-0 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-44 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-39 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-12 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-45 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-1 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-5 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-26 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-29 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,736] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-34 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,737] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-10 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,737] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-32 state changed to (Leader:2,ISR:2,3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,737] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-40 state changed to (Leader:3,ISR:3,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:16,738] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 2 with 26 become-leader and 25 become-follower partitions (state.change.logger)
[2024-11-17 13:59:16,738] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 3 with 26 become-leader and 25 become-follower partitions (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set(2, 3) for 52 partitions (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition my-topic-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-49 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-38 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-16 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-27 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-8 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-19 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-13 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-46 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-35 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-24 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-5 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-43 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-32 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-21 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-10 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-37 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-48 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-40 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-18 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-29 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-7 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-23 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-45 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-34 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-26 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-15 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-42 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-31 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-9 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-20 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-12 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-28 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-17 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-6 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-39 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-44 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-36 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-47 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-25 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-14 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-30 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-41 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-33 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-22 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-11 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,739] INFO [Broker id=2] Finished LeaderAndIsr request in 0ms correlationId 3 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition my-topic-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-49 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-38 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-16 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-27 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-8 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-19 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-13 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-46 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-35 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-24 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-5 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-43 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-32 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-21 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-10 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-37 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-48 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-40 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-18 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-29 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-7 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-23 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-45 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-34 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-26 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-15 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-4 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-42 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-31 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-9 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-20 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-12 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-1 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-28 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-17 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-6 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-39 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-44 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-36 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-47 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-3 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-25 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-14 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-30 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-41 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-22 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-33 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-11 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 3 for partition __consumer_offsets-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:16,740] INFO [Broker id=3] Finished LeaderAndIsr request in 0ms correlationId 3 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:16,742] INFO [Broker id=2] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 4 (state.change.logger)
[2024-11-17 13:59:16,742] INFO [Broker id=3] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 4 (state.change.logger)
[2024-11-17 13:59:17,248] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition my-topic-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-topic-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:17,248] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-30 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-8 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-21 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-27 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-9 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-33 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-36 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-42 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-3 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-18 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-15 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-24 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-38 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-48 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-2 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-6 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-14 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-20 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-0 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-44 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-39 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-12 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-45 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-26 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,249] INFO [Controller id=2 epoch=3] Changed partition __consumer_offsets-32 from OnlinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isrWithBrokerEpoch=List(BrokerState(brokerId=3, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2024-11-17 13:59:17,250] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 25 become-follower partitions (state.change.logger)
[2024-11-17 13:59:17,250] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 3 with 25 become-leader and 0 become-follower partitions (state.change.logger)
[2024-11-17 13:59:17,250] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set(2, 3) for 25 partitions (state.change.logger)
[2024-11-17 13:59:17,251] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 for 25 partitions (state.change.logger)
[2024-11-17 13:59:17,251] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 5 from controller 2 for 25 partitions (state.change.logger)
[2024-11-17 13:59:17,252] INFO [Broker id=2] Follower __consumer_offsets-0 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,252] INFO [Broker id=2] Follower __consumer_offsets-48 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,252] INFO [Broker id=2] Follower __consumer_offsets-45 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,252] INFO [Broker id=2] Follower __consumer_offsets-26 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,252] INFO [Broker id=2] Follower __consumer_offsets-42 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,252] INFO [Broker id=2] Follower __consumer_offsets-20 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,252] INFO [Broker id=2] Follower __consumer_offsets-39 starts at leader epoch 2 from offset 1 with partition epoch 2 and high watermark 1. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,252] INFO [Broker id=2] Follower __consumer_offsets-36 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,252] INFO [Broker id=2] Follower __consumer_offsets-14 starts at leader epoch 2 from offset 3 with partition epoch 2 and high watermark 3. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-33 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-30 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-27 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-8 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-24 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-21 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-2 starts at leader epoch 2 from offset 3 with partition epoch 2 and high watermark 3. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-18 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-15 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-12 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-9 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-38 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-6 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-44 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-32 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,253] INFO [Broker id=2] Follower __consumer_offsets-3 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 3. Previous leader Some(3) and previous leader epoch was 2. (state.change.logger)
[2024-11-17 13:59:17,254] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 2 epoch 3 with correlation id 5 for 25 partitions (state.change.logger)
[2024-11-17 13:59:17,261] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 2 epoch 3 as part of the become-leader transition for 25 partitions (state.change.logger)
[2024-11-17 13:59:17,262] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,262] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:17,263] INFO [Controller id=2 epoch=3] Sending StopReplica request for 26 replicas to broker 2 (state.change.logger)
[2024-11-17 13:59:17,269] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,270] INFO [Broker id=2] Finished LeaderAndIsr request in 19ms correlationId 5 from controller 2 for 25 partitions (state.change.logger)
[2024-11-17 13:59:17,271] INFO [Broker id=2] Add 25 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 6 (state.change.logger)
[2024-11-17 13:59:17,272] INFO [Broker id=2] Handling StopReplica request correlationId 7 from controller 2 for 26 partitions (state.change.logger)
[2024-11-17 13:59:17,306] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,312] INFO [Broker id=3] Leader __consumer_offsets-26 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,322] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,331] INFO [Broker id=3] Leader __consumer_offsets-20 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,335] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 1 with partition epoch 2, high watermark 1, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,335] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-22 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition my-topic-2 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-4 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-7 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-46 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-25 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-35 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-41 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-23 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-49 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-47 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-16 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-28 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-31 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-37 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-17 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-19 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-11 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-13 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,336] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-43 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,337] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-1 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,337] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-5 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,337] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-29 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,337] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-34 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,337] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-10 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,337] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-40 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:17,337] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 3 with 26 become-leader and 0 become-follower partitions (state.change.logger)
[2024-11-17 13:59:17,337] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set(2, 3) for 26 partitions (state.change.logger)
[2024-11-17 13:59:17,338] INFO [Broker id=3] Leader __consumer_offsets-14 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 3 with partition epoch 2, high watermark 3, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,338] INFO [Broker id=2] Add 26 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 8 (state.change.logger)
[2024-11-17 13:59:17,339] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,340] INFO [Controller id=2 epoch=3] Sending StopReplica request for 26 replicas to broker 2 (state.change.logger)
[2024-11-17 13:59:17,340] INFO [Broker id=2] Handling StopReplica request correlationId 9 from controller 2 for 26 partitions (state.change.logger)
[2024-11-17 13:59:17,346] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,348] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,382] INFO [Broker id=3] Leader __consumer_offsets-8 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,392] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,399] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,403] INFO [Broker id=3] Leader __consumer_offsets-2 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 3 with partition epoch 2, high watermark 3, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,407] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,413] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,420] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,424] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,440] INFO [Broker id=3] Leader __consumer_offsets-38 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,443] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,450] INFO [Broker id=3] Leader __consumer_offsets-44 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,455] INFO [Broker id=3] Leader __consumer_offsets-32 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,457] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(2) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,477] INFO [Broker id=3] Finished LeaderAndIsr request in 226ms correlationId 5 from controller 2 for 25 partitions (state.change.logger)
[2024-11-17 13:59:17,482] INFO [Broker id=3] Add 25 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 6 (state.change.logger)
[2024-11-17 13:59:17,483] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 7 from controller 2 for 26 partitions (state.change.logger)
[2024-11-17 13:59:17,484] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 7 from controller 2 epoch 3 as part of the become-leader transition for 26 partitions (state.change.logger)
[2024-11-17 13:59:17,485] INFO [Broker id=3] Leader __consumer_offsets-29 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,489] INFO [Broker id=3] Leader __consumer_offsets-10 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,491] INFO [Broker id=3] Leader __consumer_offsets-7 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,498] INFO [Broker id=3] Leader __consumer_offsets-23 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,505] INFO [Broker id=3] Leader __consumer_offsets-4 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 3 with partition epoch 2, high watermark 3, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,510] INFO [Broker id=3] Leader __consumer_offsets-1 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,517] INFO [Broker id=3] Leader __consumer_offsets-17 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,522] INFO [Broker id=3] Leader my-topic-2 with topic id Some(nfJFDJl4Ty6A_UkcJNI4AQ) starts at leader epoch 1 from offset 0 with partition epoch 1, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 0. (state.change.logger)
[2024-11-17 13:59:17,525] INFO [Broker id=3] Leader __consumer_offsets-49 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,527] INFO [Broker id=3] Leader __consumer_offsets-11 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,531] INFO [Broker id=3] Leader __consumer_offsets-46 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,535] INFO [Broker id=3] Leader __consumer_offsets-43 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,543] INFO [Broker id=3] Leader __consumer_offsets-5 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,551] INFO [Broker id=3] Leader __consumer_offsets-40 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,564] INFO [Broker id=3] Leader __consumer_offsets-37 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,569] INFO [Broker id=3] Leader __consumer_offsets-34 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,574] INFO [Broker id=3] Leader __consumer_offsets-31 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,584] INFO [Broker id=3] Leader __consumer_offsets-47 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,594] INFO [Broker id=3] Leader __consumer_offsets-19 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,596] INFO [Broker id=3] Leader __consumer_offsets-28 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,601] INFO [Broker id=3] Leader __consumer_offsets-35 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,607] INFO [Broker id=3] Leader __consumer_offsets-16 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,615] INFO [Broker id=3] Leader __consumer_offsets-25 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,617] INFO [Broker id=3] Leader __consumer_offsets-22 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,619] INFO [Broker id=3] Leader __consumer_offsets-41 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,621] INFO [Broker id=3] Leader __consumer_offsets-13 with topic id Some(BqNACLILRYaJozDVa9uQlQ) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas [] . Previous leader Some(3) and previous leader epoch was 1. (state.change.logger)
[2024-11-17 13:59:17,624] INFO [Broker id=3] Finished LeaderAndIsr request in 141ms correlationId 7 from controller 2 for 26 partitions (state.change.logger)
[2024-11-17 13:59:17,631] INFO [Broker id=3] Add 26 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 8 (state.change.logger)
[2024-11-17 13:59:22,414] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition my-topic-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-topic-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:22,416] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:22,417] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:22,418] INFO [Controller id=2 epoch=3] Sending StopReplica request for 51 replicas to broker 2 (state.change.logger)
[2024-11-17 13:59:22,419] INFO [Broker id=2] Handling StopReplica request correlationId 10 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:22,442] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-22 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,442] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-30 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,442] INFO [Controller id=2 epoch=3] Partition my-topic-2 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,442] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-8 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,442] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-21 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,442] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-4 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-27 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-7 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-9 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-46 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-25 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-35 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-41 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-33 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-23 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-49 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-47 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-16 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-28 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-31 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-36 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-42 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-3 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-18 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-37 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-15 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-24 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-38 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,443] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-17 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,444] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-48 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,444] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-19 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,444] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-11 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,444] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-13 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,444] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-2 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,444] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-43 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,444] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-6 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,444] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-14 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,444] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-20 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,444] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-0 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-44 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-39 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-12 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-45 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-1 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-5 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-26 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-29 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-34 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-10 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-32 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-40 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:22,446] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 3 with 51 become-leader and 0 become-follower partitions (state.change.logger)
[2024-11-17 13:59:22,447] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set(2, 3) for 51 partitions (state.change.logger)
[2024-11-17 13:59:22,447] INFO [Controller id=2 epoch=3] Sending StopReplica request for 51 replicas to broker 2 (state.change.logger)
[2024-11-17 13:59:22,448] INFO [Broker id=2] Add 51 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 11 (state.change.logger)
[2024-11-17 13:59:22,448] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 9 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition my-topic-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-49 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-38 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-16 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-27 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-8 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-19 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-13 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-2 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-46 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-35 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-24 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-5 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-43 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,450] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-32 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-21 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-10 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-37 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-48 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-40 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-18 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-29 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-7 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-23 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-45 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-34 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-26 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-4 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-15 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-42 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-31 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-9 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-20 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-12 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-28 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-17 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-6 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-39 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-44 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-36 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-47 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-3 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-25 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-14 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-30 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-41 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-33 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-22 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-11 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,451] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 9 epoch 3 for partition __consumer_offsets-0 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:22,452] INFO [Broker id=3] Finished LeaderAndIsr request in 4ms correlationId 9 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:22,458] INFO [Broker id=2] Handling StopReplica request correlationId 12 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:22,460] INFO [Broker id=3] Add 51 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 10 (state.change.logger)
[2024-11-17 13:59:27,476] ERROR [Controller id=2 epoch=3] Controller 2 epoch 3 failed to change state for partition my-topic-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-topic-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:27,476] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:27,480] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:27,480] INFO [Controller id=2 epoch=3] Sending StopReplica request for 51 replicas to broker 2 (state.change.logger)
[2024-11-17 13:59:27,481] INFO [Broker id=2] Handling StopReplica request correlationId 13 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:27,501] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-22 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,501] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-30 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,501] INFO [Controller id=2 epoch=3] Partition my-topic-2 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,501] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-8 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,501] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-21 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,501] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-4 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,501] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-27 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,502] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-7 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,502] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-9 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-46 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-25 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-35 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-41 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-33 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-23 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-49 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-47 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-16 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-28 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-31 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-36 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-42 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-3 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-18 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-37 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-15 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-24 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-38 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-17 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-48 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-19 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-11 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-13 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-2 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-43 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-6 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-14 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-20 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-0 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-44 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-39 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-12 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-45 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-1 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-5 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-26 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-29 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,503] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-34 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,504] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-10 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,504] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-32 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,504] INFO [Controller id=2 epoch=3] Partition __consumer_offsets-40 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,504] INFO [Controller id=2 epoch=3] Sending LeaderAndIsr request to broker 3 with 51 become-leader and 0 become-follower partitions (state.change.logger)
[2024-11-17 13:59:27,507] INFO [Controller id=2 epoch=3] Sending UpdateMetadata request to brokers Set(2, 3) for 51 partitions (state.change.logger)
[2024-11-17 13:59:27,507] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 11 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition my-topic-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-49 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-38 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-16 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-27 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-8 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-19 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-13 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-2 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-46 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-35 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-24 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-5 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-43 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-32 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-21 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-10 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-37 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-48 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-40 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-18 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-29 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-7 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-23 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-45 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-34 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-26 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-4 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-15 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-42 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-31 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-9 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-20 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-12 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-28 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-17 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-6 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-39 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-44 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-36 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-47 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-3 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-25 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-14 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-30 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-41 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-33 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-22 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-11 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,508] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 2 with correlation id 11 epoch 3 for partition __consumer_offsets-0 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,509] INFO [Broker id=3] Finished LeaderAndIsr request in 2ms correlationId 11 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:27,514] INFO [Broker id=2] Add 51 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 14 (state.change.logger)
[2024-11-17 13:59:27,515] INFO [Broker id=3] Add 51 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 3 with correlation id 12 (state.change.logger)
[2024-11-17 13:59:27,516] INFO [Controller id=2 epoch=3] Sending StopReplica request for 51 replicas to broker 2 (state.change.logger)
[2024-11-17 13:59:27,516] INFO [Broker id=2] Handling StopReplica request correlationId 15 from controller 2 for 51 partitions (state.change.logger)
[2024-11-17 13:59:27,886] INFO [Controller id=3 epoch=4] Sending UpdateMetadata request to brokers Set(3) for 0 partitions (state.change.logger)
[2024-11-17 13:59:27,927] INFO [Controller id=3 epoch=4] Sending LeaderAndIsr request to broker 3 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Controller id=3 epoch=4] Sending UpdateMetadata request to brokers Set(3) for 52 partitions (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 3 for 52 partitions (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition my-topic-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition my-topic-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-49 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-38 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-27 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-16 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-19 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-8 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-13 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-2 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-46 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-35 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-24 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-5 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-43 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-32 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-21 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-10 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-37 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-48 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-40 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-29 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-18 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-7 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-23 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-34 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-45 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-26 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-15 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-4 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-42 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-9 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-20 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-31 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-12 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-17 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-28 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-6 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-39 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-44 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-36 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-47 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-14 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-25 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-3 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-41 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-30 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-11 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-22 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-33 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 1 epoch 4 for partition __consumer_offsets-0 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:27,929] INFO [Broker id=3] Finished LeaderAndIsr request in 0ms correlationId 1 from controller 3 for 52 partitions (state.change.logger)
[2024-11-17 13:59:27,944] INFO [Broker id=3] Add 52 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 3 epoch 4 with correlation id 2 (state.change.logger)
[2024-11-17 13:59:27,956] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-22 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,956] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-30 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,956] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-8 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,956] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-21 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,956] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-4 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,957] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-27 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,957] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-7 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,957] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-9 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,957] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-46 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,957] INFO [Controller id=3 epoch=4] Partition my-topic-1 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,957] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-25 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,973] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-35 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,973] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-41 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,973] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-33 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,973] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-23 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-49 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-47 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-16 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-28 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-31 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-36 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-42 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-3 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-18 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-37 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-15 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-24 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition my-topic-0 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-38 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-17 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-48 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-19 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-11 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-13 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-2 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,974] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-43 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-6 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-14 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-20 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-0 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-44 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-39 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-12 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-45 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-1 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-5 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-26 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-29 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-34 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-10 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-32 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,975] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-40 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:27,999] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-22 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-30 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition my-topic-2 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-8 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-21 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-4 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-27 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-7 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-9 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-46 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition my-topic-1 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-25 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-35 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-41 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-33 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-23 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-49 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-47 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-16 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-28 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-31 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,000] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-36 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-42 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-3 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-18 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-37 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-15 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-24 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-38 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-17 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-48 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-19 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-11 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-13 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-2 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-43 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-6 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-14 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-20 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-0 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-44 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-39 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-12 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-45 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-1 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-5 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-26 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,001] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-29 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,002] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-34 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,002] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-10 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,002] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-32 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,002] INFO [Controller id=3 epoch=4] Partition __consumer_offsets-40 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:4) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2024-11-17 13:59:28,002] INFO [Controller id=3 epoch=4] Sending LeaderAndIsr request to broker 3 with 52 become-leader and 0 become-follower partitions (state.change.logger)
[2024-11-17 13:59:28,002] INFO [Controller id=3 epoch=4] Sending UpdateMetadata request to brokers Set(3) for 53 partitions (state.change.logger)
[2024-11-17 13:59:28,002] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 3 for 52 partitions (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition my-topic-2 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition my-topic-0 since its associated leader epoch 1 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-49 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-38 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-16 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-27 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-8 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-19 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-13 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-2 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-46 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-35 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-24 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-5 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-43 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-32 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-21 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-10 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-37 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-48 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-40 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-18 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-29 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-7 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-23 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-45 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-34 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-26 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-15 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-4 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-42 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-31 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-9 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-20 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-12 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-1 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-28 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-17 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-6 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-39 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-44 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-36 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-47 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-3 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-25 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-14 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-30 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-41 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-22 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-33 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-11 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Ignoring LeaderAndIsr request from controller 3 with correlation id 3 epoch 4 for partition __consumer_offsets-0 since its associated leader epoch 2 matches the current leader epoch (state.change.logger)
[2024-11-17 13:59:28,003] INFO [Broker id=3] Finished LeaderAndIsr request in 1ms correlationId 3 from controller 3 for 52 partitions (state.change.logger)
[2024-11-17 13:59:28,004] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 3 epoch 4 with correlation id 4 (state.change.logger)
[2024-11-17 13:59:28,009] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition my-topic-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-topic-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:317)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1568)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2581)
	at kafka.controller.KafkaController.process(KafkaController.scala:2626)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:28,009] INFO [Controller id=3 epoch=4] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:29,505] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-22 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,505] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-30 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,505] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition my-topic-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-topic-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,505] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-8 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,505] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-21 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,505] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-4 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,505] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-27 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,505] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-7 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,505] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-9 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-46 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-25 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-35 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-41 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-33 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-23 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-49 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-47 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-16 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-28 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-31 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,506] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-36 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-42 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-18 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-37 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-15 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-24 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition my-topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-38 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-17 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-48 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-19 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,507] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-11 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-13 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-43 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-6 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-14 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-20 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-44 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-39 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-12 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,508] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-45 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,509] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,509] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-5 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,509] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-26 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,509] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-29 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,509] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-34 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,509] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-10 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,509] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-32 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,509] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-40 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:29,509] INFO [Controller id=3 epoch=4] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:29,509] INFO [Controller id=3 epoch=4] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:34,544] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-22 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,544] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-30 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,545] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition my-topic-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-topic-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,545] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-8 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,545] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-21 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,545] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-4 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,545] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-27 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,545] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-7 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,545] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-9 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,545] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-46 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-25 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-35 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-41 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-33 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-23 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-49 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-47 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-16 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-28 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-31 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-36 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,546] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-42 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,547] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,547] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-18 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,547] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-37 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,547] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-15 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,547] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-24 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,547] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition my-topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,547] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-38 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,547] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-17 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,547] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-48 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,548] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-19 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,548] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-11 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,548] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-13 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,548] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,548] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-43 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,548] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-6 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,548] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-14 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-20 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-44 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-39 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-12 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-45 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-5 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-26 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-29 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-34 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-10 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,549] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-32 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,550] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-40 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:34,550] INFO [Controller id=3 epoch=4] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:34,550] INFO [Controller id=3 epoch=4] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:39,587] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-22 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,588] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-30 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,588] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition my-topic-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-topic-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,588] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-8 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,588] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-21 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,588] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-4 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,589] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-27 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,589] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-7 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,589] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-9 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,589] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-46 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,589] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-25 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,589] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-35 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,590] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-41 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,590] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-33 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,590] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-23 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,590] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-49 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,590] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-47 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,590] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-16 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,590] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-28 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,590] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-31 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,590] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-36 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,590] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-42 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,591] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-3 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,591] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-18 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,591] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-37 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,591] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-15 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,591] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-24 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,595] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition my-topic-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-topic-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,595] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-38 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,595] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-17 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,595] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-48 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,596] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-19 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,596] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-11 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,596] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-13 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,596] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-2 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,596] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-43 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,596] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-6 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,596] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-14 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,596] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-20 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,596] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-0 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-44 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-39 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-12 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-45 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-1 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-5 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-26 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-29 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-34 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-10 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,606] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-32 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,607] ERROR [Controller id=3 epoch=4] Controller 3 epoch 4 failed to change state for partition __consumer_offsets-40 from OnlinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy ControlledShutdownPartitionLeaderElectionStrategy
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.KafkaController.doControlledShutdown(KafkaController.scala:1394)
	at kafka.controller.KafkaController.$anonfun$processControlledShutdown$1(KafkaController.scala:1356)
	at scala.util.Try$.apply(Try.scala:213)
	at kafka.controller.KafkaController.processControlledShutdown(KafkaController.scala:1356)
	at kafka.controller.KafkaController.process(KafkaController.scala:2612)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:54)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:138)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:141)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:141)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:141)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:136)
[2024-11-17 13:59:39,607] INFO [Controller id=3 epoch=4] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
[2024-11-17 13:59:39,607] INFO [Controller id=3 epoch=4] Sending UpdateMetadata request to brokers Set() for 0 partitions (state.change.logger)
